spring.application.name=demo

# MySQL 데이터베이스 설정
spring.datasource.url=jdbc:mysql://localhost:3306/learning_service?useSSL=false&serverTimezone=UTC&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=1234
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA 설정
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# 자동 데이터 로딩 설정
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:DB-scripts/init.sql
spring.sql.init.data-locations=classpath:DB-scripts/init-dummy.sql
spring.sql.init.continue-on-error=true
spring.sql.init.encoding=UTF-8


# 서버 포트
server.port=8080

# 로깅 설정
logging.level.com.example.demo=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.boot.autoconfigure=DEBUG

# # Kafka 설정 (로컬 테스트용)
# spring.kafka.bootstrap-servers=localhost:29092
# spring.kafka.consumer.group-id=learning-service-group
# spring.kafka.consumer.auto-offset-reset=earliest
# spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
# spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
# spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Redis 설정 (로컬 테스트용)
spring.redis.host=localhost
spring.redis.port=6379
